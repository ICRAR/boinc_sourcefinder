#! /usr/bin/env python# -*- coding: utf-8 -*-##    ICRAR - International Centre for Radio Astronomy Research#    (c) UWA - The University of Western Australia#    Copyright by UWA (in the framework of the ICRAR)#    All rights reserved##    This library is free software; you can redistribute it and/or#    modify it under the terms of the GNU Lesser General Public#    License as published by the Free Software Foundation; either#    version 2.1 of the License, or (at your option) any later version.##    This library is distributed in the hope that it will be useful,#    but WITHOUT ANY WARRANTY; without even the implied warranty of#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU#    Lesser General Public License for more details.##    You should have received a copy of the GNU Lesser General Public#    License along with this library; if not, write to the Free Software#    Foundation, Inc., 59 Temple Place, Suite 330, Boston,#    MA 02111-1307  USA#"""Generates all of the possible parameter file combinations for the given app.These are stored in the folder specified by "DIR_PARAM"."""import argparsefrom config import get_configfrom utils import module_importfrom utils.logger import config_loggerMODULE = "parameter_files_mod"LOG = config_logger(__name__)def parse_args():    parser = argparse.ArgumentParser()    parser.add_argument('app_name', nargs='1', help='The name of the app to use.')    parser.add_argument('--add_to_db', action='store_true', help='Add the generated parameter files to the db.')    args = vars(parser.parse_args())    return argsif __name__ == "__main__":    arguments = parse_args()    app_name = arguments['app_name']    mod = module_import(MODULE, app_name)    LOG.debug("Loading module {0}.{1}".format(app_name, MODULE))    if mod is None:        LOG.error("Could not load module {0}.{1}".format(app_name, MODULE))        exit(1)    parameter_generator = mod.ParameterFileGenerator(get_config(app_name))    exit(parameter_generator(arguments['add_to_db']))